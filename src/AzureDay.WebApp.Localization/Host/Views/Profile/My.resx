<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Attendee" xml:space="preserve">
    <value>Attendee</value>
  </data>
  <data name="ByLink" xml:space="preserve">
    <value>link</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="DropPayment01" xml:space="preserve">
    <value>If you want to drop the info in ticket puchase form, please, press the</value>
  </data>
  <data name="DropPayment01a" xml:space="preserve">
    <value>Pay attention: you can't drop succesfully purchased ticket. You also can't withdraw the succesful payment.</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="HowToUseTicket" xml:space="preserve">
    <value>You don't need to print a ticket in order to attend AzureDay. Instead you should remember name and e-mail you have entered while registering. This information you will need to provide at the entrance to the conferense and/or workshops.</value>
  </data>
  <data name="isModelValid" xml:space="preserve">
    <value>All fields are mandatory to complete</value>
  </data>
  <data name="isPasswordLengthValid" xml:space="preserve">
    <value>Minimum password lenghth is 6 charachters</value>
  </data>
  <data name="isPasswordValid" xml:space="preserve">
    <value>Passwords should match</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Job title</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="MyTicket" xml:space="preserve">
    <value>My ticket</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordAgain" xml:space="preserve">
    <value>Password again</value>
  </data>
  <data name="PayByCard" xml:space="preserve">
    <value>Pay by card (using kaznachey.ua)</value>
  </data>
  <data name="PayNow" xml:space="preserve">
    <value>If you didn't complete the purchase, you can again go to purchase form using</value>
  </data>
  <data name="PayViaLiqPay" xml:space="preserve">
    <value>Pay via LiqPay</value>
  </data>
  <data name="PersonalCabinet" xml:space="preserve">
    <value>Personal cabinet</value>
  </data>
  <data name="Questions01" xml:space="preserve">
    <value>If you have questions regarding payment, you can contact us via e-mail</value>
  </data>
  <data name="Questions01a" xml:space="preserve">
    <value>and we will help you to solve all issues.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ThankYouWait" xml:space="preserve">
    <value>Thank you! The purchase is being processed. You will receive a confirmation e-mail as soon as we will confirm the payment. You can get a purchase notification from your bank sooner, but don't worry - we will still get your payment if it was succesful.</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>UAH</value>
  </data>
  <data name="TicketCode" xml:space="preserve">
    <value>Promocode</value>
  </data>
  <data name="TicketPrice" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Lab01" xml:space="preserve">
    <value>Workshop</value>
  </data>
  <data name="Ticket01" xml:space="preserve">
    <value>Conference ticket</value>
  </data>
  <data name="Ticket02" xml:space="preserve">
    <value>Workshop ticket</value>
  </data>
  <data name="TicketsLeft" xml:space="preserve">
    <value>tickets left</value>
  </data>
</root>