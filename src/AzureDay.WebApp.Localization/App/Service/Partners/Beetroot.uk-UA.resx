<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description" xml:space="preserve">
    <value>"Привіт! Ми — шведсько-українська компанія Beetroot. Наша команда поєднує веб-розробників, дизайнерів та ілюстраторів, які працюють над цікавими проектами для міжнародних клієнтів. Відкривши свій перший офіс в Одесі у 2012 році, сьогодні Beetroot — це велика родина з більш ніж двохсот людей, які підтримують один одного і варять смачний борщ у Києві, Полтаві, Івано-Франківську, Харкові, Стокгольмі та, звичайно, Одесі. А ще, Beetroot має свою власну освітню програму — Beetroot Academy. Це школи програмування та веб-дизайну, які розташовані у дев’яти містах України й прагнуть навчати, надихати та допомагати всім, хто мріє потрапити до світу ІТ. 
Beetroot: як все починалося
16-го вересня 2012, залишивши позаду 1600 кілометрів дороги з Санкт-Петербургу, двоє друзів-шведів, Андреас та Густав, приїхали до Києва. В той час вони мали лише старенькі, пошарпані Жигулі та невпинне бажання змінити суспільство, в якому жили. Ну і, звісно, паспорти. Та зареєстровану у Швеції компанію Beetroot. А крім цього — нічогісенько."
Вже за 24 години в них з'явився свій офіс. Точніше, маленька кімната в офісі їх друзів, в якій вони могли працювати та жити.
Київ став відправним пунктом для Beetroot, але у лютому 2013 Андреас та Густав рушили до Одеси. Туди їх покликали нові можливості, а може й бажання бути ближче до моря, хтозна.
Тож винайнявши невеличку кімнату для офісу, двоє підприємців почали міркувати про своє майбутнє. Воно звісно мало бути повне талановитих, закоханих у свою справу людей. А ще там мало бути затишне відчуття дому та взаємопідтримки. Вони мріяли про такі команди, що братимуть на себе відповідальність за свою роботу та ніколи не боятимуться відверто висловлюватись з будь-якого приводу. Звісно, в їхніх мріях було ще дещо про сумісні посиденьки в пабах, але це вже інша історія.
Потроху, ці ідеї почали справджуватись і перетворюватись на те, що ми тепер звемо культурою Beetroot. Можливо, завдячуючи саме унікальній культурі, команда Beetroot почала невпинно зростати. І ось сьогодні ми маємо понад двісті п'ятдесят завзятих і життєрадісних людей у п'яти містах України — Одесі, Полтаві, Києві, Харкові та Івано-Франківську  — і продовжуємо запрошувати нові таланти до нашої родини."</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Beetroot</value>
  </data>
</root>